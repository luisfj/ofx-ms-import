server:
    port: 8040
    # servlet:
    #     context-path: /api/v1/import

spring:
    profiles:
        active: ${SPRING_ACTIVE_PROFILE:dev}
    application:
        name: ofx-ms-import        
    webflux:
        base-path: /api/v1/import
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:9091/realms/luifj-ofx-auth
    servlet:
        multipart:
            enabled: true
            max-file-size: 2MB
            max-request-size: 2MB
    rabbitmq:
        host: ${conf.rabbit.host}
        port: ${conf.rabbit.port}
        username: ${conf.rabbit.user}
        password: ${conf.rabbit.pass}
    main:
        web-application-type: reactive
    cloud:            
        openfeign:
            client:
                config:
                    default:
                        connectTimeout: 5000
                        readTimeout: 5000
                        loggerLevel: basic
                    permission-checker:
                        url: ${conf.permission-checker.url}
                        connectTimeout: 5000
                        readTimeout: 5000
                        loggerLevel: full
                        # errorDecoder: com.example.SimpleErrorDecoder
                        # retryer: com.example.SimpleRetryer
                        # defaultQueryParameters:
                        #     query: queryValue
                        # defaultRequestHeaders:
                        #     header: headerValue
                        # requestInterceptors:
                        #     - com.example.FooRequestInterceptor
                        #     - com.example.BarRequestInterceptor
                        # responseInterceptor: com.example.BazResponseInterceptor
                        # dismiss404: false
                        # encoder: com.example.SimpleEncoder
                        # decoder: com.example.SimpleDecoder
                        # contract: com.example.SimpleContract
                        # capabilities:
                        #     - com.example.FooCapability
                        #     - com.example.BarCapability
                        # queryMapEncoder: com.example.SimpleQueryMapEncoder
                        # micrometer.enabled: false

eureka:
  client:
    service-url:
      defaultZone : http://localhost:8761/eureka/

queue:
    name: 
        sse: sse.queue
        imported: imported.queue
        imported-fail: imported.fail.queue
    routing-key:
        sse: sse
        imported: imported
        imported-fail: imported.fail

exchange:
    name: ofx.app