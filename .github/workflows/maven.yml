# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: OFX Ms Import CI/CD flow

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Test and Build the project with maven
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install
  
  build_and_push_docker_image:
    name: Build docker image and push to docker hub
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: luisfj/ofx-ms-import
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  deploy_to_vps:
    name: Remove old version os VPS and runs a new version
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    steps:        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /srv;docker stop ofx-ms-import;docker rm ofx-ms-import;docker pull luisfj/ofx-ms-import:latest;docker run -d --env-file ./deploy/env.list --network deploy_prodnet --name ofx-ms-import luisfj/ofx-ms-import
